// This is an autogenerated file from Firebase Studio.
'use server';
/**
 * @fileOverview Predicts the likelihood of a patient attending their appointment based on their history.
 *
 * - predictPatientAttendance - A function that predicts patient attendance.
 * - PredictPatientAttendanceInput - The input type for the predictPatientAttendance function.
 * - PredictPatientAttendanceOutput - The return type for the predictPatientAttendance function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const PredictPatientAttendanceInputSchema = z.object({
  patientId: z.string().describe('The ID of the patient.'),
});
export type PredictPatientAttendanceInput = z.infer<typeof PredictPatientAttendanceInputSchema>;

const PredictPatientAttendanceOutputSchema = z.object({
  attendanceProbability: z
    .number()
    .min(0)
    .max(1)
    .describe(
      'The probability of the patient attending the appointment, between 0 and 1.'
    ),
  historySummary: z
    .string()
    .describe('A summary of the patient history relevant to attendance.'),
});
export type PredictPatientAttendanceOutput = z.infer<typeof PredictPatientAttendanceOutputSchema>;

export async function predictPatientAttendance(input: PredictPatientAttendanceInput): Promise<PredictPatientAttendanceOutput> {
  return predictPatientAttendanceFlow(input);
}

const patientAttendancePredictionPrompt = ai.definePrompt({
  name: 'patientAttendancePredictionPrompt',
  input: {schema: PredictPatientAttendanceInputSchema},
  output: {schema: PredictPatientAttendanceOutputSchema},
  prompt: `You are a medical receptionist with many years of experience. You are responsible for predicting patient attendance based on patient history.

  Given the following patient history, predict the likelihood of the patient attending their appointment.

  Patient ID: {{{patientId}}}

  Consider factors such as past attendance, appointment frequency, and any notes on the patient's reliability.
  Return a probability between 0 and 1 for the attendanceProbability field.
  Also return a summary of the patient history relevant to attendance in the historySummary field.
  `,
});

const predictPatientAttendanceFlow = ai.defineFlow(
  {
    name: 'predictPatientAttendanceFlow',
    inputSchema: PredictPatientAttendanceInputSchema,
    outputSchema: PredictPatientAttendanceOutputSchema,
  },
  async input => {
    const {output} = await patientAttendancePredictionPrompt(input);
    return output!;
  }
);
